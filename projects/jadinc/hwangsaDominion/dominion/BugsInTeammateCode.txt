Charles Jadin
CS 362, Assignment 5

My unit testing immediately revealed a bug in the Smithy card.  The test checks for a net hand count change of 2 after the card is played (3 cards drawn and 1 discarded).  The net gain was 3, and I learned from examining the code that 4 cards are drawn in the bugged code instead of 3.  The testing for this card was simple, and the only other criterion that was tested was that the played card was discarded.  This condition was met.

Reproducing this bug requires that a game be properly initialized with a nonzero smithy supply count (my test sets it to 5), and a player gain a smithy card in hand and play it.  The effect of gaining one more card than intended is fairly significant/severe, because having that additional card may impact the integrity of the game and tip the scales in favor of the player who drew that card.

Unit testing also revealed a similar bug in Adventurer.  Four cards were drawn from the deck, and the player had two more cards in hand than expected.  I had to take a closer look at the code to really find the source of the problem.  The drawntreasure variable counts from 0 to 2, so the player keeps drawing until 3 treasure cards are drawn, rather than 2.  My test code specifies 5 cards at the top of the deck, including 3 treasure cards.  In addition to the expected net gain of one card not being met, the top two cards in the hand were not a copper and a silver; presumably they were a silver and a gold, because the third treasure card gained would have been gold.

To reproduce this bug, a player's deck needs at least 3 treasure cards.  That player must have an Adventurer card in hand and must play it.  The severity of this bug is significant and similar to that of the bug in Smithy.  It grants the player an additional treasure card, although there is some tradeoff that comes with discarding the other drawn cards from the deck.  In any case, it has potential to impact the game's outcome.